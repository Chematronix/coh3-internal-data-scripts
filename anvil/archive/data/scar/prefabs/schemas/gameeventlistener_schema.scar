--
-- GameEventListener prefab
--

-- Schema
gameeventlistener_schema = { -- schema ALWAYS named the prefab name with schema on the end
	
	type = "Prefab",
	name = "gameeventlistener",
	displayName = "Game Event Listener",
	description = "Game Event Listener prefab. Use this once per mission",
	script = "gameeventlistener.scar",
	proxy = "art/gameplay/designer_objects/placeholder_templates/encounter_a", -- some identifying visual we can see in the WB - something to click on, too, in order to select the prefab
	itemSchema = {
		{
			type = ST_TABLE,
			name = "events",
			displayName = "Events",
			multiplicity = "multiple",
			itemSchema = {
				{
					type = ST_STRING,
					name = "event_type",
					displayName = "Event Type",
					description = "Event type to check for",
					options = 
					{
						"GE_AbilityExecuted",
						"GE_DamageReceived",
						"GE_EntityKilled",
						"GE_MineDefused",
						"GE_SquadProductionQueue",
						"GE_SquadKilled",
						"GE_UpgradeComplete",
						"GE_StrategicPointChanged",
					},
				},
				{
					type = ST_PREFAB,
					name = "on_event_fulfilled",
					displayName = "On Event Fulfilled",
					description = "Launch the prefab when the event is fired and the conditions in specified are met",
					category = "On Event",
				},
				{
					type = ST_BOOLEAN,
					name = "run_once",
					displayName = "Run Once",
					description = "Run this event callback once",
					default = false,
				},
				{
					type = ST_PBG,
					name = "ability",
					displayName = "Ability",
					description = "Ability to check for",
					blueprintType = "ability",
					requirement = {"event_type", "GE_AbilityExecuted",},
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "caster_type",
					displayName = "Caster Type",
					description = "Caster type of the game event",
					options = {"PLAYER", "SGROUP", "EGROUP", "ANY",},
					requirement = {"event_type", "GE_AbilityExecuted", "GE_UpgradeComplete"},
					default = "ANY",
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "target_type",
					displayName = "Target Type",
					description = "Target type of the game event",
					options = {"PLAYER", "SGROUP", "EGROUP", "POSITION", "ANY",},
					requirement = {"event_type", "GE_AbilityExecuted", "GE_UpgradeComplete"},
					default = "ANY",
					category = "Event",
				},
				{
					type = ST_PLAYER,
					name = "caster_player",
					displayName = "Caster Player",
					description = "Caster player of the game event to check for",
					requirement =
					{
						operator = "ANY",
						{"caster_type", "PLAYER"},
						{"ignore_caster_player_check", false},
					},
					category = "Event",
				},
				{
					type = ST_PLAYER,
					name = "target_player",
					displayName = "Target Player",
					description = "Target player of the game event to check for",
					requirement =
					{
						operator = "ANY",
						{"target_type", "PLAYER"},
						{"ignore_target_player_check", false},
					},
					category = "Event",
				},
				{
					type = ST_SGROUP,
					name = "caster_sgroup",
					displayName = "Caster SGroup",
					description = "Caster SGroup of the game event to check for",
					requirement =
					{
						operator = "ANY",
						{"caster_type", "SGROUP"},
						{"attacker_type", "SGROUP"},
						{"ignore_caster_squad_check", false},
					},
					category = "Event",
				},
				{
					type = ST_SGROUP,
					name = "target_sgroup",
					displayName = "Target SGroup",
					description = "Target SGroup of the game event to check for",
					requirement =
					{
						operator = "ANY",
						{"target_type", "SGROUP"},
						{"victim_type", "SGROUP"},
						{"ignore_victim_check", false},
					},
					category = "Event",
				},
				{
					type = ST_EGROUP,
					name = "caster_egroup",
					displayName = "Caster EGroup",
					description = "Caster EGroup of the game event to check for",
					requirement =
					{
						operator = "ANY",
						{"caster_type", "EGROUP"},
						{"attacker_type", "EGROUP"},
					},
					category = "Event",
				},
				{
					type = ST_EGROUP,
					name = "target_egroup",
					displayName = "Target EGroup",
					description = "Target EGroup of the game event to check for",
					requirement =
					{
						operator = "ANY",
						{"target_type", "EGROUP"},
						{"victim_type", "EGROUP"},
						{"ignore_target_entity_check", false},
					},
					category = "Event",
				},
				{
					type = ST_MARKER,
					name = "target_position",
					displayName = "Target Position",
					description = "Target position of the game event to check for",
					hasRange = true,
					shape = "circle",
					requirement = {"target_type", "POSITION"},
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "attacker_type",
					displayName = "Attacker Type",
					description = "Attacker type of the game event",
					options = {"EGROUP", "SGROUP", "ANY"},
					requirement = {"event_type", "GE_DamageReceived", "GE_EntityKilled", "GE_SquadKilled"},
					default = "ANY",
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "victim_type",
					displayName = "Victim Type",
					description = "Victim type of the game event",
					options = {"EGROUP", "SGROUP", "ANY"},
					requirement = {"event_type", "GE_DamageReceived"},
					default = "ANY",
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_damage_check",
					displayName = "Ignore Damage Check",
					description = "Should the event ignore check for damage value",
					requirement = {"event_type", "GE_DamageReceived"},
					default = false,
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "comparison",
					displayName = "Comparison",
					description = "How to compare the numbers",
					options = {"IS_EQUAL", "IS_LESS_THAN", "IS_GREATER_THAN", "IS_LESS_THAN_OR_EQUAL", "IS_GREATER_THAN_OR_EQUAL", "IS_NOT_EQUAL"},
					default = "IS_GREATER_THAN_OR_EQUAL",
					requirement =
					{
						operator = "ANY",
						{"ignore_damage_check", false},
						{"ignore_current_health_check", false},
						{"ignore_remaining_entities_check", false},
					},
					category = "Event",
				},
				{
					type = ST_NUMBER,
					name = "damage",
					displayName = "Damage",
					description = "Damage received by the victim",
					requirement = {"ignore_damage_check", false},
					default = 0,
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_is_repairing_check",
					displayName = "Ignore Is Repairing Check",
					description = "Should the event ignore check for is_reparing",
					requirement = {"event_type", "GE_DamageReceived"},
					default = false,
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "is_repairing",
					displayName = "Is Repairing",
					description = "Is the victim repairing",
					requirement = {"ignore_is_repairing_check", false},
					default = false,
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_current_health_check",
					displayName = "Ignore Current Health Check",
					description = "Should the event ignore check for current health value",
					requirement = {"event_type", "GE_DamageReceived"},
					default = false,
					category = "Event",
				},
				{
					type = ST_NUMBER,
					name = "current_health",
					displayName = "Current Health",
					description = "Current health of the victim",
					requirement = {"ignore_current_health_check", false},
					default = 0,
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_death_reason_check",
					displayName = "Ignore Death Reason Check",
					description = "Should the event ignore check for death reason",
					requirement = {"event_type", "GE_EntityKilled"},
					default = false,
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "death_reason",
					displayName = "Death Reason",
					description = "Reason of the death",
					options =
					{
						"DEATHREASON_NORMAL",
						"DEATHREASON_OUTOFCONTROL",
						"DEATHREASON_CASUALTY",
						"DEATHREASON_WALKABLE_SURFACE",
						"DEATHREASON_SUBMERGE",
						"DEATHREASON_DEATH_AS_DRIVER",
						"DEATHREASON_SYNC_KILL",
						"DEATHREASON_ON_BLUEPRINT_CONVERT",
					},
					requirement = {"ignore_death_reason_check", false},
					default = "DEATHREASON_NORMAL",
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_remaining_entities_check",
					displayName = "Ignore Remaining Entities Check",
					description = "Should the event ignore check for remaining entities",
					requirement = {"event_type", "GE_EntityKilled"},
					default = false,
					category = "Event",
				},
				{
					type = ST_NUMBER,
					name = "remaining_entities_in_squad",
					displayName = "Remaining Entities In Squad",
					description = "Number of entities remaining in the squad",
					requirement = {"ignore_remaining_entities_check", false},
					default = 0,
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_caster_player_check",
					displayName = "Ignore Caster Player Check",
					description = "Should the event ignore check for caster player",
					requirement = {"event_type", "GE_DamageReceived", "GE_EntityKilled", "GE_MineDefused", "GE_SquadProductionQueue", "GE_SquadKilled"},
					default = false,
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_caster_squad_check",
					displayName = "Ignore Caster Squad Check",
					description = "Should the event ignore check for caster squad",
					requirement = {"event_type", "GE_MineDefused", "GE_StrategicPointChanged"},
					default = false,
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_target_entity_check",
					displayName = "Ignore Target Entity Check",
					description = "Should the event ignore check for target entity",
					requirement = {"event_type", "GE_MineDefused", "GE_StrategicPointChanged"},
					default = false,
					category = "Event",
				},
				{
					type = ST_PBG,
					name = "caster_squad_bp",
					displayName = "Caster Squad BP",
					description = "Caster Squad BP to check for",
					blueprintType = "squad",
					requirement =
					{
						operator = "ANY",
						{"event_type", "GE_SquadProductionQueue"},
						{
							operator = "ALL",
							{"event_type", "GE_SquadKilled"},
							{"caster_unit_type_check", false},
						},
						{"caster_bp_type", "SQUAD"},
					},
					category = "Event",
				},
				{
					type = ST_PBG,
					name = "target_squad_bp",
					displayName = "Target Squad BP",
					description = "Target Squad BP to check for",
					blueprintType = "squad",
					requirement =
					{
						operator = "ANY",
						{
							operator = "ALL",
							{"event_type", "GE_SquadKilled"},
							{"target_unit_type_check", false},
						},
						{
							operator = "ALL",
							{"event_type", "GE_DamageReceived", "GE_EntityKilled"},
							{"target_bp_type", "SQUAD"},
						},
					},
					category = "Event",
				},
				{
					type = ST_PBG,
					name = "caster_entity_bp",
					displayName = "Caster Entity BP",
					description = "Caster Entity BP to check for",
					blueprintType = "entity",
					requirement = {"caster_bp_type", "ENTITY"},
					category = "Event",
				},
				{
					type = ST_PBG,
					name = "target_entity_bp",
					displayName = "Target Entity BP",
					description = "Target Entity BP to check for",
					blueprintType = "entity",
					requirement =
					{
						operator = "ALL",
						{"event_type", "GE_DamageReceived", "GE_EntityKilled"},
						{"target_bp_type", "ENTITY"},
					},
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_victim_check",
					displayName = "Ignore Victim Check",
					description = "Should the event ignore check for victim",
					requirement = {"event_type", "GE_SquadKilled"},
					default = false,
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_last_member_bp_check",
					displayName = "Ignore Last Member BP Check",
					description = "Should the event ignore check for last member bp",
					requirement = {"event_type", "GE_SquadKilled"},
					default = false,
					category = "Event",
				},
				{
					type = ST_PBG,
					name = "last_member_bp",
					displayName = "Last Member BP",
					description = "Last member BP to check for",
					blueprintType = "entity",
					requirement = {"ignore_last_member_bp_check", false},
					category = "Event",
				},
				{
					type = ST_PBG,
					name = "upgrade",
					displayName = "Upgrade",
					description = "Upgrade to check for",
					blueprintType = "upgrade",
					requirement = {"event_type", "GE_UpgradeComplete"},
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_change_type_check",
					displayName = "Ignore Change Type Check",
					description = "Should the event ignore check for change type",
					requirement = {"event_type", "GE_StrategicPointChanged"},
					default = false,
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "change_type",
					displayName = "Change Type",
					description = "Type of the change",
					options =
					{
						"CT_Captured",
						"CT_Reverting",
						"CT_Secured",
						"CT_UnCaptured",
						"CT_Seized",
						"CT_StartedCapture",
						"CT_StartedCooldown",
						"CT_StartedRevertingCooldown",
						"CT_Halted",
					},
					requirement = {"ignore_change_type_check", false},
					default = "CT_Captured",
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "ignore_target_player_check",
					displayName = "Ignore Target Player Check",
					description = "Should the event ignore check for target player",
					requirement = {"event_type", "GE_DamageReceived", "GE_EntityKilled", "GE_SquadKilled","GE_StrategicPointChanged"},
					default = false,
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "caster_unit_type_check",
					displayName = "Caster Unit Type Check",
					description = "Check the type of the caster unit. Otherwise use Caster BP check.",
					requirement = {"event_type", "GE_DamageReceived", "GE_EntityKilled", "GE_SquadKilled"},
					default = false,
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "target_unit_type_check",
					displayName = "Target Unit Type Check",
					description = "Check the type of the target unit. Otherwise use Target BP check.",
					requirement = {"event_type", "GE_DamageReceived", "GE_EntityKilled", "GE_SquadKilled"},
					default = false,
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "caster_bp_type",
					displayName = "Caster BP Type",
					description = "Type of the caster blueprint",
					options = {"SQUAD", "ENTITY", "ANY"},
					requirement = {"event_type", "GE_DamageReceived", "GE_EntityKilled", "GE_SquadKilled"},
					default = "ANY",
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "target_bp_type",
					displayName = "Target BP Type",
					description = "Type of the target blueprint",
					options = {"SQUAD", "ENTITY", "ANY"},
					requirement = {"event_type", "GE_DamageReceived", "GE_EntityKilled"},
					default = "ANY",
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "caster_unit_types",
					displayName = "Caster Unit Types",
					description = "Comma(,) separated unit types of the caster",
					requirement = {"caster_unit_type_check", true},
					category = "Event",
				},
				{
					type = ST_STRING,
					name = "target_unit_types",
					displayName = "Target Unit Types",
					description = "Comma(,) separated unit types of the target",
					requirement = {"target_unit_type_check", true},
					category = "Event",
				},
				{
					type = ST_BOOLEAN,
					name = "complete_squad_check",
					displayName = "Complete Squad Check",
					description = "Check if the squad reinforced is complete",
					requirement = {"event_type", "GE_SquadProductionQueue"},
					default = false,
					category = "Event",
				},
			},
		},
	},
}